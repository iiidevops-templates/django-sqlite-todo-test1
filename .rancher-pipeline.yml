stages:
- name: Build--build and push docker image
  steps:
  - env:
      PLUGIN_BUILD_ARGS: --progress=tty --network=host
      PLUGIN_DEBUG: 'true'
      PLUGIN_INSECURE: 'true'
      PLUGIN_MIRROR: https://harbor-dev3.iiidevops.org
      PLUGIN_MTU: '1000'
    publishImageConfig:
      buildContext: .
      dockerfilePath: ./Dockerfile
      pushRemote: true
      registry: harbor-dev3.iiidevops.org
      tag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
  when:
    branch:
      include:
      - master
      - develop
- name: Test--Sonarqube source code scan
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-sonarqube
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-sq
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
      - develop
- name: Test--Checkmarx source code scan
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
      catalogTemplate: cattle-global-data:iii-dev-charts3-scan-checkmarx
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-cmx
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
      - develop
- name: Deploy--Setting Web environment variables
  steps:
  - envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify
        && rancher kubectl delete configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        --ignore-not-found=true && rancher kubectl create configmap -n ${CICD_GIT_REPO_NAME}
        ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env --from-env-file=iiidevops/app.env
        && rancher kubectl annotate configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        iiidevops.org/project_name=${CICD_GIT_REPO_NAME} iiidevops.org/branch=${CICD_GIT_BRANCH}
        iiidevops.org/commit_id=${CICD_GIT_COMMIT} iiidevops.org/type=appenv
  when:
    branch:
      include:
      - master
- name: Deploy--Web
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        harbor.host: harbor-dev3.iiidevops.org
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.imageTag: ${CICD_GIT_REPO_NAME}/${CICD_GIT_BRANCH}:latest
        web.port: 8080
      catalogTemplate: cattle-global-data:iii-dev-charts3-web
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.5.1
  when:
    branch:
      include:
      - master
- name: Deploy--Wait Web deployment
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
  when:
    branch:
      include:
      - master
- name: Test--Postman
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.deployName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
        web.port: 8080
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-postman
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-pm
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
- name: Test--Webinspect
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-webinspect
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-wi
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
- name: Test--ZAP
  steps:
  - applyAppConfig:
      answers:
        git.branch: ${CICD_GIT_BRANCH}
        git.commitID: ${CICD_GIT_COMMIT}
        git.repoName: ${CICD_GIT_REPO_NAME}
        git.url: ${CICD_GIT_URL}
        pipeline.sequence: ${CICD_EXECUTION_SEQUENCE}
        web.deployName: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-serv
        web.port: 8080
      catalogTemplate: cattle-global-data:iii-dev-charts3-test-zap
      name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-zap
      targetNamespace: ${CICD_GIT_REPO_NAME}
      version: 0.1.0
  when:
    branch:
      include:
      - master
